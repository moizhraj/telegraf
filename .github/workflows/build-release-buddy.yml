name: ACR Build Release

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment Type'
        type: environment
        required: true

jobs:
  docker_build:
    name: 'Build Telegraf'
    runs-on: ubuntu-latest
    environment: development
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Create Datetime Tag
      run: echo "NOW=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Export Telegraf
      uses: docker/build-push-action@v5
      with:
        push: false
        tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf:master-${{ env.NOW }}
        file: scripts/ci.docker
        outputs: type=oci,dest=/tmp/telegraf-image.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: telegraf-image
        path: /tmp/telegraf-image.tar
  
  dev_publish:
    name: 'Publish Dev ACR'
    runs-on: ubuntu-latest
    environment: 'development'
    permissions:
      contents: none
    needs: docker_build

    steps:
      - name: Download artifacts (Docker images) from previous workflows
        uses: actions/download-artifact@v2
        with:
          name: telegraf-image
          path: /tmp

      - name: Import Image
        run: |
          docker import /tmp/telegraf-image.tar ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf:master-${{ env.NOW }}
      
      - name: Load Docker image
        run: |
          docker load --input /tmp/telegraf-image.tar
          docker image ls -a
          
      - name: 'ACR Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        
      - name: Push Dev
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf:master-${{ env.NOW }}

  prod_publish:
    name: 'Publish Prod ACR'
    runs-on: ubuntu-latest
    environment: 'production'
    permissions:
      contents: none
    needs: dev_publish

    steps:
      - name: Download artifacts (Docker images) from previous workflows
        uses: actions/download-artifact@v2
        with:
          name: telegraf-image
          path: /tmp
      
      - name: Load Docker image
        run: |
          docker load --input /tmp/telegraf-image.tar
          docker image ls -a

      - name: 'ACR Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Dev
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf:master-${{ env.NOW }}
